#!/usr/bin/env bash
set -e

#
# Helpers
##################################################

export PATH="$PATH:node_modules/.bin"

source src/bash/partials/colors.sh
source src/bash/partials/env.sh

run() {
  echo "\$ $@"
  "$@"
}

#
# Commands
##################################################

lint() {
  run tslint \
    --project tsconfig.json \
    --config tslint.json \
    --format stylish \
    --fix
}

clean() {
  run rm -rf generated
  run rm -rf dist
}

build() {
  run mkdir -p generated/bash/partials
  run ts-node src/bash/generate.ts
  run mkdir -p dist
  run cp generated/bash/index.sh dist/bash.sh

  # preserve existing package.json
  if [ ! -f dist/package.json ]; then
    run cp src/package.json dist/package.json
  fi

  pushd dist
  run pwd
  run source bash.sh
  popd

  pushd src/install
  run pwd
  run ./index.sh
  popd
}

update() {
  build

  pushd dist
  run pwd
  run yarn upgrade
  popd
}

install() {
  clean
  update
}

#
# CLI
##################################################

#
# Call the function specified by the first parameter, passing all remaining
# parameters to the function. If no such function exists, display usage info.
#
if [ -n "$1" ] && type $1 | grep -i function > /dev/null; then
  yarn
  command="$1"
  shift
  $command ${@}
else
  fail "No such command: $1"
fi
